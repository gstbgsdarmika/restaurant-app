{"version":3,"file":"app~261a312b.bundle.js","mappings":";mWACA,0uNAkCA,QAnCuC,WACrC,cAA2C,IAA7BA,EAAmB,EAAnBA,oBAAqBC,EAAI,EAAJA,MAArC,4FAAyC,SACrCC,KAAKC,MAAQF,EACbC,KAAKE,+BACLF,KAAKG,qBAAuBL,CAC9B,CAJF,UAUG,EAqBA,OA/BH,EAIG,EAJH,EAIG,2CAED,WAA+B,WAC7BE,KAAKC,MAAMG,wBAAuB,SAACC,GACjC,EAAKC,mBAAmBD,EAC1B,GACF,GAAC,iCAVH,EAUG,UAED,WAAyBA,GAAW,uEACK,GAAvCL,KAAKO,aAAeF,EAAYG,SAG5BR,KAAKK,YAAYI,OAAS,GAAC,gCACJT,KAAKG,qBAAqBO,kBAAkBV,KAAKK,aAAY,OAAtFM,EAAmB,EAAH,4CAESX,KAAKG,qBAAqBS,oBAAmB,OAAtED,EAAmB,EAAH,aAGlBX,KAAKa,sBAAsBF,GAAkB,gDAZ9C,EAVH,8KAuBG,iFAED,SAAsBG,GACpBd,KAAKC,MAAMc,wBAAwBD,EACrC,GAAC,uBAED,WACE,OAAOd,KAAKO,YACd,IA/BF,uEA+BG,EAhCoC,sNC2CvC,QAzCkC,sIAsC/B,SAtC+B,8BAChC,WACE,MAAO,qUAST,GAAC,oCAED,SAAuBS,GACrBC,SAASC,eAAe,SAASC,iBAAiB,UAAU,SAACC,GAC3DJ,EAASI,EAAMC,OAAOC,MACxB,GACF,GAAC,6BAED,SAAgBR,GACdd,KAAKe,wBAAwBD,EAC/B,GAAC,qCAED,WAA0C,IACpCS,EADkBT,EAAc,UAAH,6CAAG,GAGlCS,EADET,EAAYL,OACPK,EAAYU,QAAO,SAACC,EAAOC,GAAU,OAAKD,EAAME,QAAOC,EAAAA,EAAAA,IAA6BF,GAAY,GAAE,IAElG1B,KAAK6B,8BAGdZ,SAASC,eAAe,eAAeY,UAAYP,EAEnDN,SAASC,eAAe,eAAea,cAAc,IAAIC,MAAM,uBACjE,GAAC,yCAED,WACE,MAAO,uFACT,2EAAC,EAtC+B,qQCDlC,0uNAiBA,QAlBqC,WACnC,cAA2C,IAA7BjC,EAAI,EAAJA,KAAMD,EAAmB,EAAnBA,qBAAtB,4FAAyC,SACrCE,KAAKC,MAAQF,EACbC,KAAKG,qBAAuBL,EAE5BE,KAAKiC,0BACP,CALF,UAKG,EASA,OAdH,EAKG,EALH,EAKG,wCALH,EAKG,UAED,oGAC4BjC,KAAKG,qBAAqBS,oBAAmB,OAAjEE,EAAc,EAAH,KACjBd,KAAKkC,oBAAoBpB,GAAa,+CAJvC,EALH,8KAUG,8EAED,SAAoBA,GAClBd,KAAKC,MAAMc,wBAAwBD,EACrC,IAdF,uEAcG,EAfkC,2SCCrC,knGAAAqB,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAsBA,QApBoB,CACZC,OAAM,WAAG,iWAQf,EAEMC,YAAW,WAAG,yHACOC,EAAAA,EAAAA,cAAiC,OAApDZ,EAAa,EAAH,KACVa,EAAuBtB,SAASuB,cAAc,gBACpDd,EAAWe,SAAQ,SAAC3B,GAClByB,EAAqBT,YAAaF,EAAAA,EAAAA,IAA6Bd,EACjE,IAAG,0CALe,EAMpB","sources":["webpack://restaurant-apps/./src/scripts/views/pages/liked-restaurants/favorite-restaurant-search-presenter.js","webpack://restaurant-apps/./src/scripts/views/pages/liked-restaurants/favorite-restaurant-search-view.js","webpack://restaurant-apps/./src/scripts/views/pages/liked-restaurants/favorite-restaurant-show-presenter.js","webpack://restaurant-apps/./src/scripts/views/pages/restaurants.js"],"sourcesContent":["class FavoriteRestaurantSearchPresenter {\n  constructor({ favoriteRestaurants, view }) {\n    this._view = view;\n    this._listenToSearchRequestByUser();\n    this._favoriteRestaurants = favoriteRestaurants;\n  }\n\n  _listenToSearchRequestByUser() {\n    this._view.runWhenUserIsSearching((latestQuery) => {\n      this._searchRestaurants(latestQuery);\n    });\n  }\n\n  async _searchRestaurants(latestQuery) {\n    this._latestQuery = latestQuery.trim();\n\n    let foundRestaurants;\n    if (this.latestQuery.length > 0) {\n      foundRestaurants = await this._favoriteRestaurants.searchRestaurants(this.latestQuery);\n    } else {\n      foundRestaurants = await this._favoriteRestaurants.getAllRestaurants();\n    }\n\n    this._showFoundRestaurants(foundRestaurants);\n  }\n\n  _showFoundRestaurants(restaurants) {\n    this._view.showFavoriteRestaurants(restaurants);\n  }\n\n  get latestQuery() {\n    return this._latestQuery;\n  }\n}\n\nexport default FavoriteRestaurantSearchPresenter;\n","import { createRestaurantItemTemplate } from '../../templates/template-creator';\n\nclass FavoriteRestaurantSearchView {\n  getTemplate() {\n    return `\n      <div class=\"content\">\n        <h2 class=\"content__heading\">Your Liked Restaurant</h2>\n        <div class=\"inputSearch\"><input id=\"query\" type=\"text\" placeholder=\"Enter restaurant name\"></div>\n          <div id=\"restaurants\" class=\"restaurants\">\n                        \n            </div>\n        </div>\n    `;\n  }\n\n  runWhenUserIsSearching(callback) {\n    document.getElementById('query').addEventListener('change', (event) => {\n      callback(event.target.value);\n    });\n  }\n\n  showRestaurants(restaurants) {\n    this.showFavoriteRestaurants(restaurants);\n  }\n\n  showFavoriteRestaurants(restaurants = []) {\n    let html;\n    if (restaurants.length) {\n      html = restaurants.reduce((carry, restaurant) => carry.concat(createRestaurantItemTemplate(restaurant)), '');\n    } else {\n      html = this._getEmptyRestaurantTemplate();\n    }\n\n    document.getElementById('restaurants').innerHTML = html;\n\n    document.getElementById('restaurants').dispatchEvent(new Event('restaurants:updated'));\n  }\n\n  _getEmptyRestaurantTemplate() {\n    return '<div class=\"restaurant-item__not__found\">Tidak ada restaurant untuk ditampilkan</div>';\n  }\n}\n\nexport default FavoriteRestaurantSearchView;\n","class FavoriteRestaurantShowPresenter {\n  constructor({ view, favoriteRestaurants }) {\n    this._view = view;\n    this._favoriteRestaurants = favoriteRestaurants;\n\n    this._showFavoriteRestaurants();\n  }\n\n  async _showFavoriteRestaurants() {\n    const restaurants = await this._favoriteRestaurants.getAllRestaurants();\n    this._displayRestaurants(restaurants);\n  }\n\n  _displayRestaurants(restaurants) {\n    this._view.showFavoriteRestaurants(restaurants);\n  }\n}\n\nexport default FavoriteRestaurantShowPresenter;\n","import RestaurantsDbSource from '../../data/restaurantdb-source';\nimport { createRestaurantItemTemplate } from '../templates/template-creator';\n\nconst Restaurants = {\n  async render() {\n    return `\n      <div class=\"content\">\n        <h2 class=\"content__heading\">Restaurant Catalogue</h2>\n        <div id=\"restaurants\" class=\"restaurants\">\n        </div>\n      </div>\n      `;\n  },\n\n  async afterRender() {\n    const restaurant = await RestaurantsDbSource.restaurants();\n    const restaurantsContainer = document.querySelector('#restaurants');\n    restaurant.forEach((restaurants) => {\n      restaurantsContainer.innerHTML += createRestaurantItemTemplate(restaurants);\n    });\n  },\n};\n\nexport default Restaurants;\n"],"names":["favoriteRestaurants","view","this","_view","_listenToSearchRequestByUser","_favoriteRestaurants","runWhenUserIsSearching","latestQuery","_searchRestaurants","_latestQuery","trim","length","searchRestaurants","foundRestaurants","getAllRestaurants","_showFoundRestaurants","restaurants","showFavoriteRestaurants","callback","document","getElementById","addEventListener","event","target","value","html","reduce","carry","restaurant","concat","createRestaurantItemTemplate","_getEmptyRestaurantTemplate","innerHTML","dispatchEvent","Event","_showFavoriteRestaurants","_displayRestaurants","i","render","afterRender","RestaurantsDbSource","restaurantsContainer","querySelector","forEach"],"sourceRoot":""}